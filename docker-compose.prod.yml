version: '3.8'

services:
  web:
    #image: akr77/sport3_web
    # Берем Dockerfile из каталога app
    build:
       #./sportapp
       context: ./sportapp
       #image: akr77/sport3_web
       dockerfile: Dockerfile.prod
    # Запускаем сервер gunicorn
    command: gunicorn sportapp.wsgi:application --bind 0.0.0.0:8000
    # Открываем порт 8000 внутри и снаружи
    #ports:
    #  - 8000:8000
    expose:
      - 8000

    volumes:
      - static_volume:/home/sportapp/web/static
      - media_volume:/home/sportapp/web/media

    env_file:
      - ./.env.prod
    # Дожидаемся запуска контейнера db
    depends_on:
      - db
  db:
    # Образ и версия базы, которую мы будем использовать
    image: postgres:12.0-alpine
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
 
  nginx:
    build: ./nginx
    # Подключаем статические и медиа файлы
    volumes:
      - static_volume:/home/sportapp/web/static
      - media_volume:/home/sportapp/web/media
    ports:
      - 1337:80
    depends_on:
      - web

volumes:
  postgres_volume:
  static_volume:
  media_volume:
